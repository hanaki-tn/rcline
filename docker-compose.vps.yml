version: '3.8'

services:
  api-server:
    build:
      context: ./services/api-server
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/rcline.db
      - FILES_PUBLIC_URL_BASE=https://awf.technavigation.jp/files
    volumes:
      - ./rcline.db:/app/data/rcline.db
      - ./logs:/app/logs
      - /var/www/files:/app/files  # ファイルアップロード用
    depends_on:
      - redis
    env_file:
      - .env.production
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"

  linehook:
    build:
      context: ./services/linehook
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    depends_on:
      - redis
    env_file:
      - .env.production
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"

  caddy:
    image: caddy:2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - ./services/api-server/public:/opt/rcline/services/api-server/public:ro # 静的ファイル用
      - /var/www/files:/var/www/files:ro  # アップロード画像ファイル配信用
    depends_on:
      - api-server
      - linehook
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

volumes:
  redis_data:
  caddy_data:
  caddy_config:
